<?php

namespace frontend\controllers;

use Yii;
use frontend\models\SearchForm;
use frontend\models\BomsParent;
use frontend\models\Materials;
use yii\data\ActiveDataProvider;
use yii\data\ArrayDataProvider;

class SearchController extends \yii\web\Controller
{
    public function actionBomIndex()
    {
        $model = new SearchForm();

        return $this->render('bom-index', [
            'model' => $model,
        ]);
    }

    /**
     * @return string
     */
    public function actionBomView()
    {
        $model = new SearchForm();
        //搜索BOM表及物料表里所有满足搜索条件的物料
        if ($model->load(Yii::$app->request->post()) && $model->validate()) {
            //按照搜索条件查出BOM表里所有满足搜索条件，并且有子级的物料
            $query_bom = BomsParent::find()
              //  ->innerJoinWith(['bom2 AS b2']) //查出有子级的所有物料数组
                ->select(['boms_parent.id','parent_id','parent_version','boms_parent.status','pv_release_time','pv_effect_date','pv_expire_date','type','creater_id','boms_parent.created_at','material_id', 'zc_part_number','description'])
                ->joinWith(['material'])
                ->joinWith(['user'])
                ->where(['like', 'materials.zc_part_number', $model->serial_number])
              //  ->andWhere(['=', 'boms.expire_date', Boms::EXPIRE_DATE_MAX])
              //  ->orWhere(['=', 'boms.expire_date', Boms::EXPIRE_DATE_TEMPORARY])
                ->orderBy('materials.zc_part_number, boms_parent.parent_version')
                ->indexBy('parent_id')
                ->asArray()
                ->all();

            //搜索物料表里所有满足搜索条件，并且在BOM表里无子级的物料
            $query_material = Materials::find()->select(['material_id', 'zc_part_number', 'description'])
                ->where(['like', 'materials.zc_part_number', $model->serial_number])
                ->andWhere(['not in', 'materials.material_id', array_column($query_bom,'parent_id')])
                ->orderBy('materials.zc_part_number')
                ->indexBy('material_id')
                ->asArray()
                ->all();
            //因物料表目前无type,status字段，故用-1与BOM表区别开
            foreach ($query_material as $key=>$val) {
                $query_material[$key]['type'] = -1;
                $query_material[$key]['status'] = -1;
            }
            //合并数组
            $query = array_merge_recursive($query_bom,$query_material);

            $dataProvider = new ArrayDataProvider([
                'allModels' => $query,
                'pagination' => [
                    'pageSize' => 10000,
                ],
            ]);
//var_dump($dataProvider);
            return $this->render('bom-view', [
                'dataProvider' => $dataProvider,
                'serial_number' => $model->serial_number,
            ]);
        }
    }
}
