<?php

namespace frontend\models;

use Yii;
use yii\base\Model;
use yii\data\ActiveDataProvider;
use frontend\models\Materials;


class MaterialsSearch extends Materials
{
    //   public $supplier_name;
    //   public $part;

    public $assy_level_toggle;
    public $purchase_level_toggle;
    public $mfr_part_number_toggle;
    public $description_toggle;
    public $pcb_footprint_toggle;
    public $manufacturer_toggle;
    public $zc_part_number_toggle;
    public $date_entered_toggle;
    public $vehicle_standard_toggle;
    public $part_type_toggle;
    public $value_toggle;
    public $schematic_part_toggle;
    public $datasheet_toggle;
    public $price_toggle;
    public $manufacturer2_id_toggle;
    public $manufacturer3_id_toggle;
    public $manufacturer4_id_toggle;
    public $recommend_purchase_toggle;
    public $lead_time_toggle;
    public $minimum_packing_quantity_toggle;

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['assy_level','material_id', 'manufacturer', 'vehicle_standard', 'part_type', 'recommend_purchase', 'minimum_packing_quantity',
                'lead_time', 'manufacturer2_id', 'manufacturer3_id', 'manufacturer4_id'], 'integer'],
            [[ 'purchase_level', 'mfr_part_number', 'description', 'pcb_footprint', 'zc_part_number',
                'date_entered', 'value', 'schematic_part', 'datasheet', 'price'], 'safe'],

            [['assy_level_toggle','purchase_level_toggle','mfr_part_number_toggle','description_toggle','pcb_footprint_toggle'
                ,'manufacturer_toggle','zc_part_number_toggle','date_entered_toggle','vehicle_standard_toggle','part_type_toggle'
                ,'value_toggle','schematic_part_toggle','datasheet_toggle','price_toggle','recommend_purchase_toggle'
                ,'lead_time_toggle','minimum_packing_quantity_toggle','manufacturer2_id_toggle','manufacturer3_id_toggle'
                ,'manufacturer4_id_toggle'], 'safe'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function scenarios()
    {
        // bypass scenarios() implementation in the parent class
        return Model::scenarios();
    }

    /**
     * Creates data provider instance with search query applied
     *
     * @param array $params
     *
     * @return ActiveDataProvider
     */
    public function search($params)
    {
        $query = Materials::find();
        // add conditions that should always apply here

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
        ]);
        $this->load($params);
        if (!$this->validate()) {
            return $dataProvider;
        }

        // grid filtering conditions
        $query->andFilterWhere([
            'assy_level' => $this->assy_level,
            'purchase_level' => $this->purchase_level,
            'price' => $this->price,
            'material_id' => $this->material_id,
        ]);

        $query->andFilterWhere(['like', 'mfr_part_number', $this->mfr_part_number])
            ->andFilterWhere(['like', 'description', $this->description])
            ->andFilterWhere(['like', 'pcb_footprint', $this->pcb_footprint])
            ->andFilterWhere(['like', 'manufacturer', $this->manufacturer])
            ->andFilterWhere(['like', 'zc_part_number', $this->zc_part_number])
            ->andFilterWhere(['like', 'date_entered', $this->date_entered])
            ->andFilterWhere(['like', 'vehicle_standard', $this->vehicle_standard])
            ->andFilterWhere(['like', 'part_type', $this->part_type])
            ->andFilterWhere(['like', 'schematic_part', $this->schematic_part])
            ->andFilterWhere(['like', 'datasheet', $this->datasheet])
            ->andFilterWhere(['like', 'price', $this->price]);

        return $dataProvider;
    }
}
