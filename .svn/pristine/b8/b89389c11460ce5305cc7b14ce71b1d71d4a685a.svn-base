<?php

namespace frontend\models;

use common\components\CommonFunc;
use Yii;


/**
 *
 * Ecn的建表思路:1.一个ECN有可能对应多个“变更集合”ecn_change_set。
 *              2.一个变更集合有可能对应多个“零件使用者”ecn_part_user。
 *              3.一个“零件使用都”有可能对应一个“组变更”ecn_alt_group。(改二三四供时的信息)
 *              4.当ECN改变一个bom时：要做的是把变更集合的信息存起来，然后要改变原bom的时间，
 *                再增加新的bom(增加的料存到ecn_bomid_temp，以备删除时用可以找到)。
 *
 * This is the model class for table "ecn".
 *
 * @property integer $id
 * @property string $serial_number
 * @property string $reason
 * @property string $detail
 * @property string $module
 * @property integer $created_at
 * @property integer $updated_at
 * @property integer $change_now
 * @property integer $affect_stock
 * @property string $remark
 * @property integer $ecr_id
 * @property integer $is_attachment
 */
class Ecn extends EcrAndEcn
{

    //为了联合审批人表用;
    public $type = [Tasks::TASK_TYPE_ECN1,Tasks::TASK_TYPE_ECN3,Tasks::TASK_TYPE_ECN2,Tasks::TASK_TYPE_ECN4];

    //变更方式是上传还是
    const BOM_CHNAGE_TYPE = [0=>'输入变更',1=>'上传变更'];
    const BOM_CHNAGE_INPUT = 0;
    const BOM_CHNAGE_UPLOAD = 1;

    //是否立即变更
    const CHANGE_NOW = [1=>'是',0=>'否'];
    const CHANGE_NOW_YES = 1;
    const CHANGE_NOW_NO = 0;

    //是否影响库存产品
    const AFFECT_STOCK = [1=>'是',0=>'否'];
    const AFFECT_STOCK_YES = 1;
    const AFFECT_STOCK_NO = 0;


    //任务名称
    const ECN_CREATE1 = '新增ECN一审';
    const ECN_CREATE2 = '新增ECN二审';
    const ECN_CREATE3 = '新增ECN三审';
    const ECN_CREATE4 = '新增ECN四审';

    //关联ECR的信息
    public $projectName,$projectProcess,$partNo,$description,$content,$background,$effect_range;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'ecn';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        $arr = parent::rules();
        return array_merge($arr,[
            [['serial_number', 'created_at', 'updated_at', 'change_now', 'affect_stock', 'ecr_id'], 'required'],
            [['created_at', 'updated_at', 'change_now', 'affect_stock', 'ecr_id'], 'integer'],
            [['serial_number'], 'string', 'max' => 20],
            [[ 'remark'], 'string', 'max' => 255],
        ]);
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        $arr = parent::attributeLabels();
        return array_merge($arr,[
            'id' => Yii::t('material', 'ID'),
            'serial_number' => Yii::t('material', '编号'),
            'created_at' => Yii::t('material', '创建时间'),
            'updated_at' => Yii::t('material', '更新时间'),
            'change_now' => Yii::t('material', '是否立即变更'),
            'affect_stock' => Yii::t('material', '是否影响库存产品'),
            'remark' => Yii::t('material', '备注'),
            'ecr_id' => Yii::t('material', 'ecr编号'),
            'effect_range' => Yii::t('material', '变更影响范围'),

            'user'=>'创建者',
            'status'=>'审批情况'
        ]);
    }

    /*
     * 审批同意的处理
     */
    public static function approvePass($mdlTask)
    {
        $_POST['taskCommit']=1;//是否立即提交
        $_POST['taskRemark']='';//备注
        $type = Tasks::TASK_TYPE_ECN4;//任务类型
        if($mdlTask->type == Tasks::TASK_TYPE_ECN1)
            $type = Tasks::TASK_TYPE_ECN2;
        else if($mdlTask->type == Tasks::TASK_TYPE_ECN2)
            $type = Tasks::TASK_TYPE_ECN3;
        else if($mdlTask->type == Tasks::TASK_TYPE_ECN3)
            $type = Tasks::TASK_TYPE_ECN4;
        else if($mdlTask->type == Tasks::TASK_TYPE_ECN4)//任务完成
        {
            Yii::$app->getSession()->setFlash('success', "任务通过");
            return Ecn::findOne($mdlTask->type_id)->serial_number;
        }
        //任务名称
        if($mdlTask->name == self::ECN_CREATE1)
            $mdlTask->name = self::ECN_CREATE2;
        else if($mdlTask->name == self::ECN_CREATE2)
            $mdlTask->name = self::ECN_CREATE3;
        else if($mdlTask->name == self::ECN_CREATE3)
            $mdlTask->name = self::ECN_CREATE4;


        $approvers=Tasks::getApprovers($type,$mdlTask->type_id);

        if(!UserTask::GenerateUserTask($approvers['approvers'],$mdlTask->id))
            return -1;

        $mdlTask->type = $type;
        $mdlTask->status = Tasks::STATUS_COMMITED;
        if(!$mdlTask->save())
            return -1;
        Yii::$app->getSession()->setFlash('success', "审批成功");
        CommonFunc::sendMail(CommonFunc::APPROVE_NOTICE,$approvers['mail'],$mdlTask->name,
            $approvers['code'],'user-task/index',$mdlTask->user->username);
        return Ecn::findOne($mdlTask->type_id)->serial_number;
    }


    /**
     * 新建时分配数据
     */
    public function assignEcrDate($EcrId)
    {
        $model = Ecr::findOne($EcrId);
        $this->ecr_id = $EcrId;

        $this->projectName = $model->projects->name;
        $this->projectProcess = $model->projectProcess->name;
        $this->partNo = $model->boms->zc_part_number;
        $this->description = $model->boms->description;
        $this->content = $model->detail;
        $this->background = $model->reason;
        $this->effect_range = $model->effect_range;
        //审批人
    }

    /**
     * 更新界面时的界面上的数据
     */
    public function getDataUpdate()
    {
        $arrChangeSets = EcnChangeSet::getTblPartStr()->where(['ecn_id'=>$this->id])->asArray()->all();
        foreach ($arrChangeSets as $k=>$changeSet)
        {
            //得到boms是否在审批

            if($changeSet['type'] == EcnChangeSet::CT_ALTGROUP)
            {
                $tmpDatas = EcnPartUser::find()->where(['ecn_change_id'=>$changeSet['id']])
                    ->innerJoin('ecn_altgroup as ea','ea.part_user_id=ecn_part_user.id')
                    ->leftJoin('materials as mtr','mtr.material_id=ea.mdf_part_id')
                    ->innerJoin('boms_child as cbom','cbom.id=ecn_part_user.bom_id')
                    ->innerJoin('boms_parent as pbom','pbom.id=cbom.boms_parent_id')
                    ->innerJoin('materials as m0','m0.material_id=pbom.parent_id')
                    ->innerJoin('materials as m1','m1.material_id=cbom.child_id')
                    ->leftJoin('materials as m2','m2.material_id=cbom.zc_part_number2_id')
                    ->leftJoin('materials as m3','m3.material_id=cbom.zc_part_number3_id')
                    ->leftJoin('materials as m4','m4.material_id=cbom.zc_part_number4_id')
                    ->select('ea.mfr_no,ea.mdf_type,
                        ea.mdf_part_id,
                        mtr.zc_part_number as mdf_part,
                        cbom.id as idBom,
                        m0.zc_part_number as userZcPartNo,
                        m0.description as userDesc,
                        m1.zc_part_number as zcPartNo1,
                        m2.zc_part_number as zcPartNo2,
                        m3.zc_part_number as zcPartNo3,
                        m4.zc_part_number as zcPartNo4,');
            }
            else
            {
                $tmpDatas = EcnPartUser::find()->where(['ecn_change_id'=>$changeSet['id']])
                    ->innerJoin('boms_child as cbom','cbom.id=ecn_part_user.bom_id')
                    ->innerJoin('boms_parent as pbom','pbom.id=cbom.boms_parent_id')
                    ->innerJoin('materials as m1','m1.material_id=pbom.parent_id')
                    ->select('cbom.id as idBom,m1.zc_part_number as userZcPartNo,m1.description as userDesc');
            }
            $arrChangeSets[$k]['partUser'] = $tmpDatas->asArray()->all();
        }
        arsort($arrChangeSets);
        return array_values($arrChangeSets);
    }


    /**
     * 保存变更集合
     */
    public function saveChangeSet()
    {
        if(EcnChangeSet::saveChangeSet($this->id,$this->serial_number))
            return true;
        return false;
    }

    //////////////////////////////////////////////////////////////////////
    /**
     * 在表格里显示变更原因
     */
    public function getCutBackground()
    {
        return $this->background? (mb_strlen($this->background)<=10? $this->background : mb_substr($this->background,0,10).'...') : '';
    }

    /**
     * 在表格里显示变更内容
     */
    public function getCutContent()
    {
        return $this->content? (mb_strlen($this->content)<=10? $this->content : mb_substr($this->content,0,10).'...') : '';
    }



    /////////////////////////////////关联表///////////////////////////////////////
    //关联变更集合表
    public function getEcnChangeSet()
    {
        return $this->hasMany(EcnChangeSet::className(),['ecn_id'=>'id']);
    }

    public function getEcr()
    {
        return $this->hasOne(Ecr::className(),['id'=>'ecr_id']);
    }

    /*
     * 任务通过的处理
     */
    public static function doPassTask($mdlTask,$mdlUserTask=null)
    {
        $_POST['taskCommit']=1;//是否立即提交
        $_POST['taskRemark']='';//备注
        $type = Tasks::TASK_TYPE_ECN4;//任务类型
        if($mdlTask->type == Tasks::TASK_TYPE_ECN1)
            $type = Tasks::TASK_TYPE_ECN2;
        else if($mdlTask->type == Tasks::TASK_TYPE_ECN2)
            $type = Tasks::TASK_TYPE_ECN3;
        else if($mdlTask->type == Tasks::TASK_TYPE_ECN3)
            $type = Tasks::TASK_TYPE_ECN4;
        else if($mdlTask->type == Tasks::TASK_TYPE_ECN4)//任务完成
        {
            Yii::$app->getSession()->setFlash('success', "任务通过");
            if(!ExtBomsParent::approveEcn($mdlTask->type_id))
                return ['status'=>false,'msg'=>'改变ECN表时出错'];
            $strCode = Ecn::findOne($mdlTask->type_id)->serial_number;
            //保存成功后提交
            $strAddr = $mdlTask->user->email;
            CommonFunc::sendMail(CommonFunc::APPROVE_PASS,$strAddr,$mdlTask->name,$strCode,'tasks/index');
            return ['status'=>true,'msg'=>"审批成功，任务已经通过"];
        }
        //任务名称
        if($mdlTask->name == self::ECN_CREATE1)
            $mdlTask->name = self::ECN_CREATE2;
        else if($mdlTask->name == self::ECN_CREATE2)
            $mdlTask->name = self::ECN_CREATE3;
        else if($mdlTask->name == self::ECN_CREATE3)
            $mdlTask->name = self::ECN_CREATE4;


        $approvers=Tasks::getApprovers($type,$mdlTask->type_id);

        if(!UserTask::GenerateUserTask($approvers['approvers'],$mdlTask->id))
            return ['status'=>false,'msg'=>'ECN1'];

        $mdlTask->type = $type;
        $mdlTask->status = Tasks::STATUS_COMMITED;
        if(!$mdlTask->save())
            return ['status'=>false,'msg'=>'ECN2'];

        CommonFunc::sendMail(CommonFunc::APPROVE_NOTICE,$approvers['mail'],$mdlTask->name,
            $approvers['code'],'user-task/index',$mdlTask->user->username);

        return ['status'=>true,'msg'=>"审批成功,任务进到下一级"];
    }


}
