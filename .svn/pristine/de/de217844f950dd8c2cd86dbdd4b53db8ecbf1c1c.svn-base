<?php

namespace frontend\models;

use backend\models\Department;
use backend\models\DepartmentUser;
use common\components\CommonFunc;
use Yii;


/**
 * This is the model class for table "material_attachment".
 *
 * @property integer $id
 * @property string $path
 * @property string $name
 * @property integer $version
 * @property string $remark
 * @property integer $updated_at
 * @property integer $modify_material_id;//为0时，是不经过物料更新的，项目文件上传的
 * @property integer $material_id
 * @property integer $file_class_name
 */
class MaterialAttachment extends \yii\db\ActiveRecord implements TaskInterface
{
    const PROJECT_FILE_UPLOAD = '物料文件上传';//任务名称

    public $desc;//物料的描述
    //审批部门
    public $departLvl=[];

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'material_attachment';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['path', 'name', 'version', 'updated_at', 'modify_material_id','file_class_name'], 'required'],
            [['version', 'updated_at', 'modify_material_id', 'material_id'], 'integer'],
            [['path', 'name', 'remark'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     *
     *
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('material', 'ID'),
            'path' => Yii::t('material', '路径'),
            'name' => Yii::t('material', '文件名'),
            'version' => Yii::t('material', '最新版本'),
            'remark' => Yii::t('material', '备注'),
            'updated_at' => Yii::t('material', '更新时间'),
            //为0时，是管理员上传。为-1时项目文件管理那块，还没有上传。
            'modify_material_id' => Yii::t('material', '关联的中间物料表的ID'),
            'material_id' => Yii::t('material', '关联物料表的ID'),
            'file_class_name'=>'文件类名'
        ];
    }

    public function getDepartmentApprove()
    {
        $id = ProjectProcessTemplate::findOne(['name'=>$this->file_class_name])->id;
        $pjtPcsTempApprover = PjtPcsTempApprover::find()->where(['ppt_id'=>$id])->all();
        $department = [];
        foreach ($pjtPcsTempApprover as $model){
            $department[$model->lvl][Department::findOne($model->department_id)->name] =DepartmentUser::find()->leftJoin('user','user.id=department_user.user_id')
                ->where(['department_user.department_id'=>$model->department_id])
                ->select('user.username,user.id')->indexBy('id')->column();
        }
        return $department;
    }

    /////////////////关联表////////////////////
    public function getMaterials()
    {
        return $this->hasOne(Materials::className(),['material_id'=>'material_id']);
    }

    public function createTask()
    {
        // TODO: Implement createTask() method.
        $status = $_POST['taskCommit'];//是否立即提交
        $remark = $_POST['taskRemark'];//备注
        $Author = Yii::$app->user->id;//创建者

        $task = new Tasks();
        $task->name = self::PROJECT_FILE_UPLOAD;
        $task->status=Tasks::STATUS_COMMITED;
        $task->remark = $remark;
        $task->type = Tasks::TASK_TYPE_MTR_FILE_UPLOAD;
        $task->type_id = $this->id;
        $task->date = time();
        $task->user_id = $Author;
        //如果任务保存成功再生成用户任务表
        if($task->save())
        {
            if(empty($_POST['MaterialAttachment']['departLvl'])){//如果没有设定审批
                return false;
            }
            //得到审批人
            $dataPostApprover = $_POST['MaterialAttachment']['departLvl'];
            foreach ($dataPostApprover as $key=>$value){
                $able = 0;
                if($key == 1)
                    $able=1;
                if(!UserTask::GenerateUserTask($value,$task->id,$able,$key))
                    return false;
            }

            //发邮件
            $arrApprovers = Tasks::getApprovers(Tasks::TASK_TYPE_MTR_FILE_UPLOAD,$task->id);
            CommonFunc::sendMail(CommonFunc::APPROVE_NOTICE,$arrApprovers['mail'],$task->name,
                $arrApprovers['code'],'user-task/index');

            return true;
        }
        else
            return false;
    }

    public function updateTask(Tasks $mdlTask)
    {
        // TODO: Implement updateTask() method.
        //得到审批人
        UserTask::deleteAll(['task_id'=>$mdlTask->id]);
        $dataPostApprover = $_POST['MaterialAttachment']['departLvl'];
        foreach ($dataPostApprover as $key=>$value){
            $able = 0;
            if($key == 1)
                $able=1;
            if(!UserTask::GenerateUserTask($value,$mdlTask->id,$able,$key))
                return false;
        }

        //发邮件
        $arrApprovers = Tasks::getApprovers(Tasks::TASK_TYPE_MTR_FILE_UPLOAD,$mdlTask->id);
        CommonFunc::sendMail(CommonFunc::APPROVE_NOTICE,$arrApprovers['mail'],$mdlTask->name,
            $arrApprovers['code'],'user-task/index');


        $mdlTask->status = Tasks::STATUS_COMMITED;
        $mdlTask->remark = $_POST['taskRemark'];
        if($mdlTask->save()){
            return true;
        }
        return false;
    }

    /*
     * 任务通过的处理
     */
    public static function doPassTask(Tasks $mdlTask,UserTask $mdlUserTask=null)
    {
        $mdlTemp = MaterialAttachment::findOne($mdlTask->type_id);
        $strCode = $mdlTemp->name;
        $noApproveTasks = UserTask::find()->where(['task_id'=>$mdlUserTask->task_id,'lvl'=>$mdlUserTask->lvl+1])->all();
        if(!empty($noApproveTasks)){//根据是否有下一级审批人来判断任务是否通过
            $mdlTask->status = Tasks::STATUS_COMMITED;
            if($mdlTask->save()){
                //把下一级的审批人设置成可以审批状态
                if(!UserTask::updateAll(['approve_able'=>1],['task_id'=>$mdlUserTask->task_id,'lvl'=>$mdlUserTask->lvl+1]))
                    return ['status'=>false,'msg'=>'保存附件表时出错3'];
                //发信
                $mail = UserTask::find()->leftJoin('user','user.id=user_task.user_id')
                    ->where(['user_task.task_id'=>$mdlUserTask->task_id,'user_task.lvl'=>$mdlUserTask->lvl+1])
                    ->select('user.email')->column();
                CommonFunc::sendMail(CommonFunc::APPROVE_NOTICE,$mail,$mdlTask->name,
                    $strCode,'user-task/index',$mdlTask->user->username);
                return ['status'=>true,'msg'=>"审批成功，任务已经通过"];
            }
            return ['status'=>false,'msg'=>'保存附件表时出错1'];
        }


        $mdlTemp->modify_material_id = 0;
        if(!$mdlTemp->save())
            return ['status'=>false,'msg'=>'保存附件表时出错2'];
        //保存成功后提交
        $strAddr = $mdlTask->user->email;
        CommonFunc::sendMail(CommonFunc::APPROVE_PASS,$strAddr,$mdlTask->name,$strCode,'tasks/index');
        return ['status'=>true,'msg'=>"审批成功，任务已经通过"];
    }


}
