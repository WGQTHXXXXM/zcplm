<?php

namespace frontend\controllers;

use Yii;
use frontend\models\Materials;
use frontend\models\MaterialsSearch;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;
use frontend\models\MaterialEncodeRule;
use yii\helpers\ArrayHelper;
use frontend\models\ModifyMaterial;

/**
 * MaterialsController implements the CRUD actions for Materials model.
 */
class MaterialsController extends Controller
{

    private $tableName = [
        "res"=>"frontend\\models\\ZcRes",
        "cap"=>"frontend\\models\\ZcCap",
        "ind"=>"frontend\\models\\ZcInd",
        "diode"=>"frontend\\models\\ZcDiode",
        "bead"=>"frontend\\models\\ZcBead",
        "triode"=>"frontend\\models\\ZcTriode",
        "mos"=>"frontend\\models\\ZcMos",
        "fuse"=>"frontend\\models\\ZcFuse",
        "conn"=>"frontend\\models\\ZcConn",
        "cry"=>"frontend\\models\\ZcCrystalOscillator",
        "spring"=>"frontend\\models\\ZcSpring",
        "buzzer"=>"frontend\\models\\ZcBuzzer",
        "analog ic"=>"frontend\\models\\ZcAnalogIc",
        "power ic"=>"frontend\\models\\ZcPowerIc",
        "phy"=>"frontend\\models\\ZcPhy",
        "memory"=>"frontend\\models\\ZcMemory",
        "video"=>"frontend\\models\\ZcVideo",
        "ap"=>"frontend\\models\\ZcAp",
        "sensor"=>"frontend\\models\\ZcSensor",
        "module/ic"=>"frontend\\models\\ZcRfModuleIc",
        "ant"=>"frontend\\models\\ZcRfAnt",
        "battery"=>"frontend\\models\\ZcBattery",
        "pcba"=>"frontend\\models\\ZcPcbPcba",
        "pcb"=>"frontend\\models\\ZcPcbPcba",
    ];


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST'],
                ],
            ],
        ];
    }

    /**
     * Lists a Materials model to input the search conditions.
     * @return mixed
     * This function is created by syb, and _search view page is created by gii.
     */
    public function actionSearch()
    {
        $model = new MaterialsSearch();

        return $this->render('_search', [
            'model' => $model,
        ]);
    }

    /**
     * Lists all Materials models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new MaterialsSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);
        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Displays a single Materials model.
     * @param integer $id
     * @return mixed
     */
    public function actionView($id,$modal=0)
    {
        $model = $this->findModel($id);
        if($modal == 1)//当为模态对话框时
            return $this->renderAjax('view', ['model' => $model,'isModal'=>1]);
        else
            return $this->render('view', ['model' => $model,'isModal'=>0]);
    }

    /**
     * Creates a new Materials model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $model = new Materials();
        $transaction = Yii::$app->getDb()->beginTransaction();//开启事务
        if($model->load(Yii::$app->request->post()))//点击的是更新按钮
        {
            $isSuc = $this->saveMaterial($model,$model->isNewRecord);
            //如果保存成功提交，不成功撤回并提示
            if($isSuc)
            {
                $transaction->commit();
                return $this->redirect(['view', 'id' => $model->material_id]);
            }
            else
            {
                Yii::$app->getSession()->setFlash('error', "新增出错");
                $transaction->rollBack();
            }

        }
        $class1 = MaterialEncodeRule::find()->select('name,root')->where(['lvl'=>0])->OrderBy('root')->asArray()->all();
        return $this->render('create', [
            'model' => $model,
            'class1' => $class1,
        ]);

    }

    /**
     * Updates an existing Materials model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);
        $transaction = Yii::$app->getDb()->beginTransaction();//开启事务
        if($model->load(Yii::$app->request->post()))//点击的是更新按钮
        {
            $isSuc = $this->saveMaterial($model,$model->isNewRecord);
            //如果保存成功提交，不成功撤回并提示
            if($isSuc)
                $transaction->commit();
            else
            {
                Yii::$app->getSession()->setFlash('error', "更新出错");
                $transaction->rollBack();
                return $this->showUpdateView($model);
            }
            return $this->redirect(['view', 'id' => $model->material_id]);
        }
        else//更新界面
            return $this->showUpdateView($model);
    }
    /**
     * 添加或更新一行的动作
     */
    public function saveMaterial($model,$isCreate)
    {
        //以下是把元件类型更改成MaterialEncodeRule里的ID
        $partType = MaterialEncodeRule::findOne(Yii::$app->request->post()['Materials']['part_type']);//厂家信息
        //属于哪个元件（2级分类如RES）
        $class2 = MaterialEncodeRule::find()->select('lft,rgt,name')->where(['lvl'=>1,'root'=>$partType->root])->
        andWhere(['<','lft',$partType->lft])->andWhere(['>','rgt',$partType->rgt])->all()[0];
        //保存二，三，四供
        if(!empty(Yii::$app->request->post()['Materials']['mfrPartNo2']))
            $model->manufacturer2_id = Materials::findOne(['zc_part_number'=>Yii::$app->request->post()['Materials']['mfrPartNo2']])->material_id;
        else
            $model->manufacturer2_id = "";
        if(!empty(Yii::$app->request->post()['Materials']['mfrPartNo3']))
            $model->manufacturer3_id = Materials::findOne(['zc_part_number'=>Yii::$app->request->post()['Materials']['mfrPartNo3']])->material_id;
        else
            $model->manufacturer3_id = "";
        if(!empty(Yii::$app->request->post()['Materials']['mfrPartNo4']))
            $model->manufacturer4_id = Materials::findOne(['zc_part_number'=>Yii::$app->request->post()['Materials']['mfrPartNo4']])->material_id;
        else
            $model->manufacturer4_id = "";
        if(!$model->save())//保存或更新大表
            return false;
        /****同步到研发的表上去****/
        if(!$this->syncMaterial($this->tableName[strtolower($class2->name)],$model,$isCreate,$partType->name))
            return false;
        return true;
    }

    /** 同步数据到研发库里
     * @param $tableName 同步到哪个研发数据库
     * @param $model 物料数据
     * @param $isCreate  是否是新建
     * @param $partTypeName 分类的名字
     * @return bool 是否保存成功，到时事务要用到返回值
     */
    public function syncMaterial($tableName,$model,$isCreate,$partTypeName)
    {
        $className = $tableName;//插入的是哪个表
        $classNcName = $className."Nc";
        //更新还是插入
        if($isCreate)//insert
        {
            $hardwareModel = new $className();
            $hardwareNcModel = new $classNcName();
        }
        else//update
        {
            $hardwareModel = $className::findOne(['Mfr_part_number'=>$model->mfr_part_number]);
            $hardwareNcModel = $classNcName::findOne(['Mfr_part_number'=>$model->mfr_part_number]);
        }
        //提取二三四供的信息
        $data234Mfr = [2=>['mfrPartNo'=>'','zcPartNo'=>'','mfr'=>'','des'=>''],3=>['mfrPartNo'=>'','zcPartNo'=>'','mfr'=>'','des'=>''],
            4=>['mfrPartNo'=>'','zcPartNo'=>'','mfr'=>'','des'=>'']];

        if(!empty($_POST['Materials']['mfrPartNo2']))
        {
            $dataTemp = Materials::findOne(['zc_part_number'=>$_POST['Materials']['mfrPartNo2']]);
            $data234Mfr[2]['mfrPartNo']=$dataTemp->mfr_part_number;
            $data234Mfr[2]['zcPartNo']=$dataTemp->zc_part_number;
            $data234Mfr[2]['des']=$dataTemp->description;
            $data234Mfr[2]['mfr']=$dataTemp->manufacturer1->name;
        }
        if(!empty($_POST['Materials']['mfrPartNo3']))
        {
            $dataTemp = Materials::findOne(['zc_part_number'=>$_POST['Materials']['mfrPartNo3']]);
            $data234Mfr[3]['mfrPartNo']=$dataTemp->mfr_part_number;
            $data234Mfr[3]['zcPartNo']=$dataTemp->zc_part_number;
            $data234Mfr[3]['des']=$dataTemp->description;
            $data234Mfr[3]['mfr']=$dataTemp->manufacturer1->name;
        }
        if(!empty($_POST['Materials']['mfrPartNo4']))
        {
            $dataTemp = Materials::findOne(['zc_part_number'=>$_POST['Materials']['mfrPartNo4']]);
            $data234Mfr[4]['mfrPartNo']=$dataTemp->mfr_part_number;
            $data234Mfr[4]['zcPartNo']=$dataTemp->zc_part_number;
            $data234Mfr[4]['des']=$dataTemp->description;
            $data234Mfr[4]['mfr']=$dataTemp->manufacturer1->name;
        }

        //同步不NC的数据
        $hardwareModel->setAttributes([
            "Assy_Level"=>$_POST['Materials']['assy_level'],
            "Purchase_Level"=>$_POST['Materials']['purchase_level'],
            "Mfr_part_number"=>$_POST['Materials']['mfr_part_number'],
            "Description"=>$_POST['Materials']['description'],
            "Allegro_PCB_Footprint"=>$_POST['Materials']['pcb_footprint'],
            "Manufacturer"=>empty($_POST['Materials']['manufacturer'])?" ":MaterialEncodeRule::findOne($_POST['Materials']['manufacturer'])->name,
            "zc_part_number"=>$_POST['Materials']['zc_part_number'],
            "2Mfr_part_number"=>$data234Mfr[2]['mfrPartNo'],
            "2zc_part_number"=>$data234Mfr[2]['zcPartNo'],
            "2Manufacturer"=>$data234Mfr[2]['mfr'],
            "2Description"=>$data234Mfr[2]['des'],
            "3Mfr_part_number"=>$data234Mfr[3]['mfrPartNo'],
            "3zc_part_number"=>$data234Mfr[3]['zcPartNo'],
            "3Manufacturer"=>$data234Mfr[3]['mfr'],
            "3Description"=>$data234Mfr[3]['des'],
            "4Mfr_part_number"=>$data234Mfr[4]['mfrPartNo'],
            "4zc_part_number"=>$data234Mfr[4]['zcPartNo'],
            "4Manufacturer"=>$data234Mfr[4]['mfr'],
            "4Description"=>$data234Mfr[4]['des'],
            "Version"=>date("Y-m-d H:i:s",time()),
            "Automotive"=>$model::VEHICLE_STANDARD[$_POST['Materials']['vehicle_standard']],
            "Part_type"=>$partTypeName,
            "Value"=>$_POST['Materials']['value'],
            "Schematic_part"=>$_POST['Materials']['schematic_part'],
            "Datasheet"=>$_POST['Materials']['datasheet'],
            "Price"=>$_POST['Materials']['price'],
            "recommend_purchase"=>$model::RECOMMEND_PURCHASE[$_POST['Materials']['recommend_purchase']],
            "minimum_packing_quantity"=>$_POST['Materials']['minimum_packing_quantity'],
            "lead_time"=>$_POST['Materials']['lead_time'],
        ]);
        if(!$hardwareModel->save())
            return false;

        //同步NC数据
        $hardwareNcModel->setAttributes([
            "Assy_Level"=>$_POST['Materials']['assy_level'],
            "Purchase_Level"=>$_POST['Materials']['purchase_level'],
            "Mfr_part_number"=>$_POST['Materials']['mfr_part_number'],
            "Description"=>$_POST['Materials']['description'],
            "Allegro_PCB_Footprint"=>$_POST['Materials']['pcb_footprint'],
            "Manufacturer"=>empty($_POST['Materials']['manufacturer'])?" ":MaterialEncodeRule::findOne($_POST['Materials']['manufacturer'])->name,
            "zc_part_number"=>$_POST['Materials']['zc_part_number'],
            "2Mfr_part_number"=>$data234Mfr[2]['mfrPartNo'],
            "2zc_part_number"=>$data234Mfr[2]['zcPartNo'],
            "2Manufacturer"=>$data234Mfr[2]['mfr'],
            "2Description"=>$data234Mfr[2]['des'],
            "3Mfr_part_number"=>$data234Mfr[3]['mfrPartNo'],
            "3zc_part_number"=>$data234Mfr[3]['zcPartNo'],
            "3Manufacturer"=>$data234Mfr[3]['mfr'],
            "3Description"=>$data234Mfr[3]['des'],
            "4Mfr_part_number"=>$data234Mfr[4]['mfrPartNo'],
            "4zc_part_number"=>$data234Mfr[4]['zcPartNo'],
            "4Manufacturer"=>$data234Mfr[4]['mfr'],
            "4Description"=>$data234Mfr[4]['des'],
            "Version"=>date("Y-m-d H:i:s",time()),
            "Automotive"=>$model::VEHICLE_STANDARD[$_POST['Materials']['vehicle_standard']],
            "Part_type"=>$partTypeName,
            "Value"=>"NC(".$_POST['Materials']['value'].")",
            "Schematic_part"=>$_POST['Materials']['schematic_part'],
            "Datasheet"=>$_POST['Materials']['datasheet'],
            "Price"=>$_POST['Materials']['price'],
            "recommend_purchase"=>$model::RECOMMEND_PURCHASE[$_POST['Materials']['recommend_purchase']],
            "minimum_packing_quantity"=>$_POST['Materials']['minimum_packing_quantity'],
            "lead_time"=>$_POST['Materials']['lead_time'],
        ]);
        if(!$hardwareNcModel->save())
            return false;
        return true;
    }

    /**
     * 更新界面
     */
    public function showUpdateView($model)
    {
        $partType = MaterialEncodeRule::findOne($model->part_type);
        $model->class1 = MaterialEncodeRule::find()->where(['root'=>$partType->root,'lvl'=>0])->select('id')->all()[0]->id;
        $class2data = MaterialEncodeRule::find()->where(['lvl'=>1,'root'=>$partType->root])->andWhere(['<','lft',$partType->lft])
            ->andWhere(['>','rgt',$partType->rgt])->select('id,lft,rgt,remark')->all()[0];
        $model->class2 = $class2data->id;
        //一类
        $class1 = MaterialEncodeRule::find()->select('name,root')->where(['lvl'=>0])->OrderBy('root')->all();
        //二类
        $class2 = MaterialEncodeRule::find()->select('name,id')->where(['lvl'=>1,'root'=>$partType->root])->all();
        //以下是形成智车料号的下拉框
        $dataDropMsg = [];
        $componentPos = MaterialEncodeRule::find()->where(['lvl'=>2,'root'=>$partType->root])->andWhere(['>','lft',$class2data->lft])
            ->andWhere(['<','rgt',$class2data->rgt])->OrderBy('lft')->select('name,root,lft,rgt')->all();//三级分类
        $zcPartNum = $model->zc_part_number;
        if(strtolower($class2data->remark) == 'pcba'||strtolower($class2data->remark) == 'pcb')//如果是pcb的，只给后面的几个input框分配值
        {
            $model->mer4 = substr($zcPartNum,1,2);
            $model->mer7 = substr($zcPartNum,3,4);
            $model->mer8 = substr($zcPartNum,7,2);
            $model->mer9 = substr($zcPartNum,9,2);

        }
        else//其它要给下拉框分配值
        {
            foreach ($componentPos as $key=>$val)
            {
                //得到下拉框的数据
                $componentDetail = MaterialEncodeRule::find()->where(['lvl'=>3,'root'=>$val->root])->andWhere(['>','lft',$val->lft])
                    ->andWhere(['<','rgt',$val->rgt])->select('id,name,remark')->asArray()->all();
                $dataDropMsg[] = $componentDetail;
                //解析智车料号
                if(empty($componentDetail))//是输入的值
                {
                    switch ($class2data->remark)
                    {
                        case 'RES':
                        case 'BEA':
                            $model->mer4 = substr($zcPartNum,0,4);
                            $zcPartNum = substr($zcPartNum,4);
                            break;
                        case 'CAP':
                        case 'IND':
                            $model->mer4 = substr($zcPartNum,0,3);
                            $zcPartNum = substr($zcPartNum,3);
                            break;
                    }
                }
                else if($key<5)//下拉框
                {
                    $len = strlen($componentDetail[0]['remark']);
                    $arrTemp = ArrayHelper::map($componentDetail, 'remark', 'name');
                    if($key == 0)//第一位是组装区域
                    {
                        $model->mer1 = substr($zcPartNum,0,1);
                        $zcPartNum = substr($zcPartNum,4);
                        array_unshift($dataDropMsg[$key],['remark'=>'','name'=>'请选择'.$val->name.'...']);
                    }
                    else if($key != 3)
                    {
                        array_unshift($dataDropMsg[$key],['remark'=>'','name'=>'请选择'.$val->name.'...']);
                        $mer = 'mer'.++$key;
                        $model->$mer = substr($zcPartNum,0,$len);
                        $zcPartNum = substr($zcPartNum,$len);
                    }
                }
            }
            //厂家
            $classManufacturer =end($dataDropMsg);
            array_unshift($classManufacturer,['id'=>'','name'=>'请选择厂家...']);
        }

        return $this->render('update', [
            'model' => $model,
            'class1' => $class1,
            'class2' => $class2,
            'manufacturer'=>empty($classManufacturer)?"":$classManufacturer,
            'dataDropMsg'=>$dataDropMsg,
        ]);
    }

    /**
     * Deletes an existing Materials model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     */
    public function actionDelete($id)//不用了
    {

        $transaction = Yii::$app->getDb()->beginTransaction();//开启事务
        $isSuc =false;//是否都删除成功
        $model  = Materials::findOne($id);
        if(!empty($model)&&$model->delete())//删除主表
            $isSuc = true;
        if($isSuc)//如果主表删除成功
        {
            $class2 = MaterialEncodeRule::findOne($model->part_type)->getFather()->getFather()->name;//得到这个料的二级分类
            //研发的两个物料表（带NC和不带NC的）
            $className = $this->tableName[strtolower($class2)];
            $table = $className::findOne(['zc_part_number'=>$model->zc_part_number]);
            $classNcName = $className."Nc";
            $tableNc = $classNcName::findOne(['zc_part_number'=>$model->zc_part_number]);
            //删除研发的两个表
            if(!($table && $tableNc && $table->delete() && $tableNc->delete()))
                $isSuc = false;
        }
        //如果保存成功提交，不成功撤回并提示
        if($isSuc)
        {
            $transaction->commit();
            Yii::$app->getSession()->setFlash('success', "删除成功");
        }
        else
        {
            Yii::$app->getSession()->setFlash('error', "删除出错");
            $transaction->rollBack();
        }
        return $this->redirect(['index']);
    }

    /**
     * Finds the Materials model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return Materials the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = Materials::findOne($id)) !== null) {
            $model->mfrPartNo2 = empty($model->manufacturer2_id)?"":$model->manufacturer2->zc_part_number;
            $model->mfrPartNo3 = empty($model->manufacturer3_id)?"":$model->manufacturer3->zc_part_number;
            $model->mfrPartNo4 = empty($model->manufacturer4_id)?"":$model->manufacturer4->zc_part_number;
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }

    /*
     * 编辑智车物料模板的动作
     */
    public function actionMaterialEncodeRule()
    {
        $dataMsView = MaterialEncodeRule::find()->select('id,root,lft,rgt,lvl,name,disabled,collapsed,remark')->OrderBy('root,lft');
        return $this->render('material-encode-rule',['dataMsView'=>$dataMsView]);
    }

}
